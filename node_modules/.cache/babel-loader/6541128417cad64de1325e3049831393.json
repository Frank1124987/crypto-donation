{"remainingRequest":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/babel-loader/lib/index.js!/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/components/plan/PlanTemp.vue?vue&type=template&id=3f23d983&scoped=true","dependencies":[{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/components/plan/PlanTemp.vue","mtime":1639380275233},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1628298225000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7CmltcG9ydCB7IHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSwgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCB3aXRoTW9kaWZpZXJzIGFzIF93aXRoTW9kaWZpZXJzLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIHdpdGhTY29wZUlkIGFzIF93aXRoU2NvcGVJZCwgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCl9wdXNoU2NvcGVJZCgiZGF0YS12LTNmMjNkOTgzIik7Cgp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogInBsYW4iCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpbnB1dCIsIHsKICB0eXBlOiAic3VibWl0IiwKICB2YWx1ZTogIuaNkOasviIKfSwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKX3BvcFNjb3BlSWQoKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImgyIiwgbnVsbCwgX3RvRGlzcGxheVN0cmluZygkc2V0dXAucGxhbi5uYW1lKSwgMQogIC8qIFRFWFQgKi8KICApLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJoMyIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoJHNldHVwLnBsYW4uZGVzY3JpcHRpb24pLCAxCiAgLyogVEVYVCAqLwogICksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImgzIiwgbnVsbCwgIiDlt7Lli5/ph5HpoY3vvJoiICsgX3RvRGlzcGxheVN0cmluZygkc2V0dXAucGxhbi5hY2N1bXVsYXRlKSwgMQogIC8qIFRFWFQgKi8KICApLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJmb3JtIiwgewogICAgb25TdWJtaXQ6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gX3dpdGhNb2RpZmllcnMoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJHNldHVwLmRvbmF0ZSAmJiAkc2V0dXAuZG9uYXRlLmFwcGx5KCRzZXR1cCwgYXJndW1lbnRzKTsKICAgIH0sIFsicHJldmVudCJdKSkKICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsICLkvb/nlKjogIVJRO+8miIgKyBfdG9EaXNwbGF5U3RyaW5nKCRzZXR1cC51c2VySWQpICsgIiB8IOmDqOmWgElE77yaIiArIF90b0Rpc3BsYXlTdHJpbmcoX2N0eC4kcm91dGUucGFyYW1zLmRlcGFydG1lbnRJZCksIDEKICAvKiBURVhUICovCiAgKSwgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogICAgdHlwZTogIm51bWJlciIsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJHNldHVwLmFtb3VudCA9ICRldmVudDsKICAgIH0pCiAgfSwgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZNb2RlbFRleHQsICRzZXR1cC5hbW91bnRdXSksIF9ob2lzdGVkXzJdLCAzMgogIC8qIEhZRFJBVEVfRVZFTlRTICovCiAgKV0pOwp9"},{"version":3,"sources":["/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/components/plan/PlanTemp.vue"],"names":[],"mappings":";;;;;;;;AACS,EAAA,KAAK,EAAC;;;8BAaH,mBAAA,CAAgC,OAAhC,EAAgC;AAAzB,EAAA,IAAI,EAAC,QAAoB;AAAX,EAAA,KAAK,EAAC;AAAK,CAAhC,E,IAAA,E;;AAAA,C;;;;;uBAbR,mBAAA,CAgBM,KAhBN,EAAA,UAAA,EAgBM,CAfF,mBAAA,CAEK,IAFL,EAEK,IAFL,EAEK,gBAAA,CADE,MAAA,CAAA,IAAA,CAAK,IACP,CAFL,EACgB;AAAA;AADhB,GAeE,EAZF,mBAAA,CAEK,IAFL,EAEK,IAFL,EAEK,gBAAA,CADE,MAAA,CAAA,IAAA,CAAK,WACP,CAFL,EACuB;AAAA;AADvB,GAYE,EATF,mBAAA,CAEK,IAFL,EAEK,IAFL,EAAI,WACK,gBAAA,CAAG,MAAA,CAAA,IAAA,CAAK,UAAR,CADT,EAC2B;AAAA;AAD3B,GASE,EANF,mBAAA,CAIO,MAJP,EAIO;AAJA,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,cAAA,CAAA;AAAA,aAAU,MAAA,CAAA,MAAA,IAAA,MAAA,CAAA,MAAA,OAAA,MAAA,YAAV;AAAA,KAAA,EAAgB,CAAA,SAAA,CAAhB,CAAA;AAIN,GAJP,E,CACI,mBAAA,CAAiE,GAAjE,EAAiE,IAAjE,EAAG,WAAM,gBAAA,CAAG,MAAA,CAAA,MAAH,CAAN,GAAkB,UAAlB,GAA0B,gBAAA,CAAG,IAAA,CAAA,MAAA,CAAO,MAAP,CAAc,YAAjB,CAA7B,EAA0D;AAAA;AAA1D,G,kBACA,mBAAA,CAAsC,OAAtC,EAAsC;AAA/B,IAAA,IAAI,EAAC,QAA0B;;aAAR,MAAA,CAAA,MAAA,GAAM,M;;AAAE,GAAtC,E,IAAA,E;;AAAA,G,iBAA8B,MAAA,CAAA,M,KAC9B,U,CAHJ,E;;AAAA,GAME,CAhBN,C","sourcesContent":["<template>\n    <div class=\"plan\">\n        <h2>\n            {{ plan.name}}\n        </h2>\n        <h3>\n            {{ plan.description}}\n        </h3>\n        <h3>\n            已募金額：{{ plan.accumulate }}\n        </h3>\n        <form @submit.prevent=\"donate\">\n            <p>使用者ID：{{ userId }} | 部門ID：{{ $route.params.departmentId }}</p>\n            <input type=\"number\" v-model=\"amount\">\n            <input type=\"submit\" value=\"捐款\">\n        </form>\n\n    </div>\n</template>\n\n<script>\nimport {ref, computed} from 'vue'\nimport {useStore} from 'vuex'\nimport {useRoute, useRouter} from 'vue-router'\nimport {web3, contract} from '@/contract/contract.js'\nexport default{\n    props: {\n        plan: {\n            type: Object\n        }\n    },\n    setup(props) {\n        const store = useStore()\n        const route = useRoute()\n        const router = useRouter()\n\n        const plan = ref(props.plan)\n        const amount = ref(0)\n        \n        const donate = async () => {\n            const address = await web3.eth.getAccounts()\n            console.log(\"plan initial:\", plan.value)\n            console.log(address[0])\n            //  TODO : verify the ethereum address\n            contract.methods.registerLoginAddress(store.state.user.ethereumId, address[0]).send({\n                from : address[0],\n                gas :9187500\n            })\n            .catch(console.log)\n            .finally( () => {\n                console.log(\"donating\")\n                contract.methods.donate(store.state.user.ethereumId, route.params.departmentId, plan.value.name).send({\n                    from: address[0],\n                    gas : 9187500,\n                    value: amount.value\n                }).then((result) => {\n                    // console.log(\"result\",result)\n                    // contract.methods.getPlan(route.params.departmentId, plan.value.name).call().then(console.log)\n                    console.log(\"plan after:\", plan.value)\n\n                    // router.go()\n                }).catch(window.alert)\n                \n            })\n            \n        }\n\n        return {\n            plan,\n            userId: computed(() => store.state.user.ethereumId),\n            amount,\n            donate\n        }\n    }\n}\n</script>\n\n<style scoped>\n.plan{\n    padding : 2%;\n    border-style: solid;\n    margin: 1% 0 1% 0;\n}\n</style>"],"sourceRoot":""}]}