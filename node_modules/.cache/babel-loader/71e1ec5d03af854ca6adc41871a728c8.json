{"remainingRequest":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/babel-loader/lib/index.js!/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/store/index.js","dependencies":[{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/store/index.js","mtime":1642503172344},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy93ZWlmYW40NTY5OTA4L0RvY3VtZW50cy9DcnlwdG9fRG9uYXRpb24vY3J5cHRvLWRvbmF0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IGNvbnRyYWN0IH0gZnJvbSAnLi4vY29udHJhY3QvY29udHJhY3QuanMnOwp2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZSh7CiAgc3RhdGU6IGZ1bmN0aW9uIHN0YXRlKCkgewogICAgcmV0dXJuIHsKICAgICAgZGVwYXJ0bWVudDogW10sCiAgICAgIHBsYW46IFtdLAogICAgICB1c2VyOiB7CiAgICAgICAgdUlkOiBudWxsLAogICAgICAgIGV0aGVyZXVtSWQ6IG51bGwsCiAgICAgICAgYWRkcmVzczogbnVsbAogICAgICB9CiAgICB9OwogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0RGVwYXJ0bWVudDogZnVuY3Rpb24gZ2V0RGVwYXJ0bWVudChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGVwYXJ0bWVudDsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgdXBkYXRlRGVwYXJ0bWVudDogZnVuY3Rpb24gdXBkYXRlRGVwYXJ0bWVudChzdGF0ZSwgbmV3RGVwYXJ0bWVudCkgewogICAgICBzdGF0ZS5kZXBhcnRtZW50LnB1c2gobmV3RGVwYXJ0bWVudCk7CiAgICB9LAogICAgdXBkYXRlUGxhbjogZnVuY3Rpb24gdXBkYXRlUGxhbihzdGF0ZSwgbmV3UGxhbikgewogICAgICBzdGF0ZS5wbGFuLnB1c2gobmV3UGxhbik7CiAgICB9LAogICAgc2V0QWRkcmVzczogZnVuY3Rpb24gc2V0QWRkcmVzcyhzdGF0ZSwgYWRkcmVzcykgewogICAgICBzdGF0ZS51c2VyLmFkZHJlc3MgPSBhZGRyZXNzOwogICAgfSwKICAgIHNldFVzZXJVSWQ6IGZ1bmN0aW9uIHNldFVzZXJVSWQoc3RhdGUsIHVpZCkgewogICAgICBzdGF0ZS51c2VyLnVJZCA9IHVpZDsKICAgIH0sCiAgICBzZXRVc2VyRXRoZXJldW1JZDogZnVuY3Rpb24gc2V0VXNlckV0aGVyZXVtSWQoc3RhdGUsIGV0aGVyZXVtSWQpIHsKICAgICAgc3RhdGUudXNlci5ldGhlcmV1bUlkID0gZXRoZXJldW1JZDsKICAgIH0sCiAgICBjbGVhckFsbFVzZXJJZDogZnVuY3Rpb24gY2xlYXJBbGxVc2VySWQoc3RhdGUpIHsKICAgICAgc3RhdGUudUlkID0gbnVsbCwgc3RhdGUuZXRoZXJldW1JZCA9IG51bGwsIHN0YXRlLmFkZHJlc3MgPSBudWxsOwogICAgfSwKICAgIGNsZWFyRGVwYXJ0bWVudDogZnVuY3Rpb24gY2xlYXJEZXBhcnRtZW50KHN0YXRlKSB7CiAgICAgIHN0YXRlLmRlcGFydG1lbnQgPSBbXTsKICAgIH0sCiAgICBjbGVhclBsYW46IGZ1bmN0aW9uIGNsZWFyUGxhbihzdGF0ZSkgewogICAgICBzdGF0ZS5wbGFuID0gW107CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBmZXRjaERlcGFydG1lbnQ6IGZ1bmN0aW9uIGZldGNoRGVwYXJ0bWVudChfcmVmKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjb21taXQsIGlkczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBjb21taXQoImNsZWFyRGVwYXJ0bWVudCIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGNvbnRyYWN0Lm1ldGhvZHMuZ2V0RGVwYXJ0bWVudF9pZHMoKS5jYWxsKCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGlkcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgaWRzLmZvckVhY2goIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShpZCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gY29tbWl0OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29udHJhY3QubWV0aG9kcy5nZXREZXBhcnRtZW50KGlkKS5jYWxsKCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0LnQxID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICgwLCBfY29udGV4dC50MCkoInVwZGF0ZURlcGFydG1lbnQiLCBfY29udGV4dC50MSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9KCkpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBmZXRjaFBsYW46IGZ1bmN0aW9uIGZldGNoUGxhbihfcmVmMywgZGVwYXJ0bWVudElkKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciBjb21taXQsIG5hbWVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgICBjb21taXQoImNsZWFyUGxhbiIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGNvbnRyYWN0Lm1ldGhvZHMuZ2V0UGxhbl9uYW1lcyhkZXBhcnRtZW50SWQpLmNhbGwoKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgbmFtZXMgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAgIG5hbWVzLmZvckVhY2goIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIHZhciBfcmVmNCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMobmFtZSkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBjb21taXQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29udHJhY3QubWV0aG9kcy5nZXRQbGFuKGRlcGFydG1lbnRJZCwgbmFtZSkuY2FsbCgpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDMudDEgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICgwLCBfY29udGV4dDMudDApKCJ1cGRhdGVQbGFuIiwgX2NvbnRleHQzLnQxKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeDIpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3JlZjQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0oKSk7IC8vIGNvbnNvbGUubG9nKHN0b3JlLnN0YXRlLnBsYW4pCgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfSk7CmV4cG9ydCB7IHN0b3JlIH07"},{"version":3,"sources":["/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/store/index.js"],"names":["createStore","contract","store","state","department","plan","user","uId","ethereumId","address","getters","getDepartment","mutations","updateDepartment","newDepartment","push","updatePlan","newPlan","setAddress","setUserUId","uid","setUserEthereumId","clearAllUserId","clearDepartment","clearPlan","actions","fetchDepartment","commit","methods","getDepartment_ids","call","ids","forEach","id","fetchPlan","departmentId","getPlan_names","names","name","getPlan"],"mappings":"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","sourcesContent":["import {createStore} from 'vuex'\nimport {contract} from '../contract/contract.js'\n\nconst store = createStore({\n    state () {\n        return {\n            department : [],\n            plan : [],\n            user: {\n                uId: null,\n                ethereumId: null,\n                address: null\n            }\n        }\n    },\n    getters: {\n        getDepartment(state){\n            return state.department\n        }\n    },\n    mutations: {\n        updateDepartment(state, newDepartment){\n            state.department.push(newDepartment)\n        },\n        updatePlan(state, newPlan){\n            state.plan.push(newPlan)\n        },\n        setAddress(state, address){\n            state.user.address = address\n        },\n        setUserUId(state, uid){\n            state.user.uId = uid\n        },\n        setUserEthereumId(state, ethereumId){\n            state.user.ethereumId = ethereumId\n        },\n        clearAllUserId(state){\n            state.uId = null,\n            state.ethereumId = null,\n            state.address = null\n        },\n        clearDepartment(state){\n            state.department = []\n        },\n        clearPlan(state){\n            state.plan = []\n        },\n    },\n    actions: {\n        async fetchDepartment({commit}){\n            commit(\"clearDepartment\")\n            const ids = await contract.methods.getDepartment_ids().call()\n            ids.forEach(async id => {\n                commit(\"updateDepartment\", await contract.methods.getDepartment(id).call())\n            })\n        },  \n        async fetchPlan({commit}, departmentId){\n            commit(\"clearPlan\")\n            const names = await contract.methods.getPlan_names(departmentId).call()\n            names.forEach(async name => {\n                commit(\"updatePlan\", await contract.methods.getPlan(departmentId, name).call())\n            })\n\n            // console.log(store.state.plan)\n        }   \n    }\n})\n\nexport {store}"]}]}