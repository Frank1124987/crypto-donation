{"remainingRequest":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\src\\firestore\\firestoreFunc.js","dependencies":[{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\src\\firestore\\firestoreFunc.js","mtime":1640104029144},{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9HNTAxVlcvRGVza3RvcC8wODE3L2NyeXB0by1kb25hdGlvbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkM6L1VzZXJzL0c1MDFWVy9EZXNrdG9wLzA4MTcvY3J5cHRvLWRvbmF0aW9uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgeyBmaXJlYmFzZUFQUCB9IGZyb20gIi4vZmlyZXN0b3JlSW5pdC5qcyI7CmltcG9ydCB7IGdldEZpcmVzdG9yZSwgY29sbGVjdGlvbiwgZ2V0RG9jLCBkb2MsIHNldERvYywgYWRkRG9jLCBnZXREb2NzIH0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlL2xpdGUnOwppbXBvcnQgeyBnZXRBdXRoLCBzaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZCB9IGZyb20gImZpcmViYXNlL2F1dGgiOwppbXBvcnQgeyBzdG9yZSB9IGZyb20gJy4uL3N0b3JlL2luZGV4LmpzJzsKdmFyIGRiID0gZ2V0RmlyZXN0b3JlKCk7IC8vIGNvbnN0IGRvYyA9IGNvbGxlY3Rpb24oZGIsICJ1c2VyQWNjb3VudFRvRXRoZXJldW1JZCIpCgp2YXIgZGJTZXJ2aWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBkYlNlcnZpY2UoZGIpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBkYlNlcnZpY2UpOwoKICAgIHRoaXMuZGIgPSBkYjsKICB9CgogIF9jcmVhdGVDbGFzcyhkYlNlcnZpY2UsIFt7CiAgICBrZXk6ICJyZWFkQWNjb3VudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVhZEFjY291bnQodWlkKSB7CiAgICAgIHZhciBwYXRoID0gInVzZXJBY2NvdW50VG9FdGhlcmV1bUlkLyIgKyB1aWQ7CiAgICAgIGdldERvYyhkb2MoZGIsIHBhdGgpKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICBpZiAocmVzdWx0LmV4aXN0cygpKSB7CiAgICAgICAgICB2YXIgZGF0YSA9IHJlc3VsdC5kYXRhKCk7CiAgICAgICAgICBzdG9yZS5jb21taXQoInNldFVzZXJFdGhlcmV1bUlkIiwgZGF0YS5ldGhlcmV1bUlkKTsgLy8gc3RvcmUuY29tbWl0KCJzZXRBZGRyZXNzIiwgZGF0YS5hZGRyZXNzZXMuZXRoZXJldW1BZGRyZXNzKQogICAgICAgIH0KICAgICAgfSk7CiAgICB9IC8vIHdoZW5ldmVyIGFuIGFjY291bnQgaXMgY3JlYXRlIGZyb20gQXV0aCwgY3JlYXRlIGFuIGFjY29yZGluZyBldGhlcmV1bUlkIGFuZCBzdG9yZSBpbiBmaXJlc3RvcmUKCiAgfSwgewogICAga2V5OiAiY3JlYXRlRXRoZXJldW1JZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlRXRoZXJldW1JZCh1aWQsIGRhdGFzZXQpIHsKICAgICAgY29uc29sZS5sb2codWlkLCBkYXRhc2V0KTsKICAgICAgc2V0RG9jKGRvYyhkYiwgInVzZXJBY2NvdW50VG9FdGhlcmV1bUlkIiwgdWlkKSwgewogICAgICAgIGV0aGVyZXVtSWQ6IGRhdGFzZXQuZXRoZXJldW1JZAogICAgICB9LCB7CiAgICAgICAgbWVyZ2U6IHRydWUKICAgICAgfSkudGhlbihjb25zb2xlLmxvZyk7IC8vIHNldERvYyhkb2MoZGIsICJ1c2VyQWNjb3VudFRvRXRoZXJldW1JZC8iICsgdWlkICsgIi9hZGRyZXNzZXMiLCBkYXRhc2V0LmV0aGVyZXVtQWRkcmVzcyksIHthY3RpdmU6IHRydWV9LCB7bWVyZ2U6IHRydWV9KS5jYXRjaChjb25zb2xlLmxvZykKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRBbGxBY2NvdW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRBbGxBY2NvdW50KCkgewogICAgICBnZXREb2NzKGNvbGxlY3Rpb24oZGIsICJ1c2VyQWNjb3VudFRvRXRoZXJldW1JZCIpKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICByZXN1bHQuZm9yRWFjaChmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhkb2MuaWQsICIsIHVzZXI6IiwgZG9jLmRhdGEoKS5ldGhlcmV1bUlkKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9IC8vIGNyZWF0ZUV0aGVyZXVtQWRkcmVzc19JZCh1aWQsIGFkZHJlc3MpewogICAgLy8gfQoKICB9XSk7CgogIHJldHVybiBkYlNlcnZpY2U7Cn0oKTsKCmV4cG9ydCBkZWZhdWx0IG5ldyBkYlNlcnZpY2UoZGIpOw=="},{"version":3,"sources":["C:/Users/G501VW/Desktop/0817/crypto-donation/src/firestore/firestoreFunc.js"],"names":["firebaseAPP","getFirestore","collection","getDoc","doc","setDoc","addDoc","getDocs","getAuth","signInWithEmailAndPassword","store","db","dbService","uid","path","then","result","exists","data","commit","ethereumId","dataset","console","log","merge","forEach","id"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,oBAA5B;AACA,SAAQC,YAAR,EAAsBC,UAAtB,EAAkCC,MAAlC,EAA0CC,GAA1C,EAA+CC,MAA/C,EAAuDC,MAAvD,EAA+DC,OAA/D,QAA6E,yBAA7E;AACA,SAASC,OAAT,EAAkBC,0BAAlB,QAAoD,eAApD;AACA,SAAQC,KAAR,QAAoB,mBAApB;AAEA,IAAMC,EAAE,GAAGV,YAAY,EAAvB,C,CACA;;IAEMW,S;AACF,qBAAYD,EAAZ,EAAe;AAAA;;AACX,SAAKA,EAAL,GAAUA,EAAV;AACH;;;;WAED,qBAAYE,GAAZ,EAAgB;AACZ,UAAMC,IAAI,GAAG,6BAA6BD,GAA1C;AACAV,MAAAA,MAAM,CAACC,GAAG,CAACO,EAAD,EAAKG,IAAL,CAAJ,CAAN,CAAsBC,IAAtB,CAA2B,UAACC,MAAD,EAAY;AACnC,YAAIA,MAAM,CAACC,MAAP,EAAJ,EAAoB;AAChB,cAAMC,IAAI,GAAGF,MAAM,CAACE,IAAP,EAAb;AACAR,UAAAA,KAAK,CAACS,MAAN,CAAa,mBAAb,EAAkCD,IAAI,CAACE,UAAvC,EAFgB,CAGhB;AACH;AACJ,OAND;AAOH,K,CAED;;;;WACA,0BAAiBP,GAAjB,EAAsBQ,OAAtB,EAA8B;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ,EAAiBQ,OAAjB;AACAhB,MAAAA,MAAM,CAACD,GAAG,CAACO,EAAD,EAAK,yBAAL,EAAgCE,GAAhC,CAAJ,EAA0C;AAACO,QAAAA,UAAU,EAAGC,OAAO,CAACD;AAAtB,OAA1C,EAA6E;AAACI,QAAAA,KAAK,EAAE;AAAR,OAA7E,CAAN,CAAmGT,IAAnG,CAAwGO,OAAO,CAACC,GAAhH,EAF0B,CAG1B;AACH;;;WAED,yBAAe;AACXhB,MAAAA,OAAO,CAACL,UAAU,CAACS,EAAD,EAAK,yBAAL,CAAX,CAAP,CAAmDI,IAAnD,CAAwD,UAAAC,MAAM,EAAI;AAC9DA,QAAAA,MAAM,CAACS,OAAP,CAAe,UAAArB,GAAG,EAAI;AAClBkB,UAAAA,OAAO,CAACC,GAAR,CAAYnB,GAAG,CAACsB,EAAhB,EAAoB,SAApB,EAA+BtB,GAAG,CAACc,IAAJ,GAAWE,UAA1C;AACH,SAFD;AAGH,OAJD;AAKH,K,CACD;AAEA;;;;;;;AAGJ,eAAe,IAAIR,SAAJ,CAAcD,EAAd,CAAf","sourcesContent":["import { firebaseAPP } from \"./firestoreInit.js\"\r\nimport {getFirestore, collection, getDoc, doc, setDoc, addDoc, getDocs} from 'firebase/firestore/lite';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport {store} from '../store/index.js'\r\n\r\nconst db = getFirestore()\r\n// const doc = collection(db, \"userAccountToEthereumId\")\r\n\r\nclass dbService{\r\n    constructor(db){\r\n        this.db = db\r\n    }\r\n\r\n    readAccount(uid){\r\n        const path = \"userAccountToEthereumId/\" + uid\r\n        getDoc(doc(db, path)).then((result) => {\r\n            if( result.exists()){\r\n                const data = result.data()\r\n                store.commit(\"setUserEthereumId\", data.ethereumId)\r\n                // store.commit(\"setAddress\", data.addresses.ethereumAddress)\r\n            }\r\n        })\r\n    }\r\n\r\n    // whenever an account is create from Auth, create an according ethereumId and store in firestore\r\n    createEthereumId(uid, dataset){\r\n        console.log(uid, dataset)\r\n        setDoc(doc(db, \"userAccountToEthereumId\", uid), {ethereumId : dataset.ethereumId}, {merge: true} ).then(console.log)\r\n        // setDoc(doc(db, \"userAccountToEthereumId/\" + uid + \"/addresses\", dataset.ethereumAddress), {active: true}, {merge: true}).catch(console.log)\r\n    }\r\n\r\n    getAllAccount(){\r\n        getDocs(collection(db, \"userAccountToEthereumId\")).then(result => {\r\n            result.forEach(doc => {\r\n                console.log(doc.id, \", user:\", doc.data().ethereumId)\r\n            })\r\n        })\r\n    }\r\n    // createEthereumAddress_Id(uid, address){\r\n        \r\n    // }\r\n}\r\n\r\nexport default new dbService(db)"]}]}