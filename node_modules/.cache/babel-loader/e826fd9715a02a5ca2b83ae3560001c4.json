{"remainingRequest":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/babel-loader/lib/index.js!/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/contract/contract.js","dependencies":[{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/contract/contract.js","mtime":1642503172337},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFdlYjMgZnJvbSAnd2ViMy9kaXN0L3dlYjMubWluLmpzJzsKaW1wb3J0IEFCSSBmcm9tICcuL2NvbnRyYWN0QUJJVGVzdG5ldC5qcyc7IC8vIEluaXRpYWxpemUgd2ViMyBwcm92aWRlcgovLyBkZXZlbG9wIHZlcnNpb24KLy8gcHJvZHVjdCB2ZXJzaW9uCi8vIGlmICggdHlwZW9mIGV0aGVyZXVtICE9PSAndW5kZWZpbmVkJyl7Ci8vICAgICB3ZWIzID0gbmV3IFdlYjMoV2ViMy5naXZlblByb3ZpZGVyKQovLyB9ZWxzZSB7Ci8vICAgICBhbGVydCgncmVxdWlyZSBNZXRhbWFzaycpCi8vIH0KLy8gY29uc3Qgd2ViMyA9IG5ldyBXZWIzKG5ldyBXZWIzLnByb3ZpZGVycy5XZWJzb2NrZXRQcm92aWRlcigid3M6Ly8xMjcuMC4wLjE6ODU0NSIpKQovLyBjb25zdCBjb250cmFjdCA9IG5ldyB3ZWIzLmV0aC5Db250cmFjdChBQkksICcweEQyZDQ2YWMwMzE5YmZiOTgzNjlBOEZEOTY2MDREMDE2ZjA4MGY0MDEnKQovLyBldGhlcmV1bS5yZXF1ZXN0KHsgbWV0aG9kOiAnZXRoX2FjY291bnRzJyB9KS50aGVuKGNvbnNvbGUubG9nKQoKdmFyIHdlYjMgPSBuZXcgV2ViMyhXZWIzLmdpdmVuUHJvdmlkZXIpOwp2YXIgY29udHJhY3QgPSBuZXcgd2ViMy5ldGguQ29udHJhY3QoQUJJLCAnMHhEQ0E1MjU0MWY4YTY3MkVCQ2ZhYWQzNDI2ZDIxMmYwRTA2RmI2QTQ0Jyk7IC8vIHdlYjMuZXRoLm5ldC5nZXROZXR3b3JrVHlwZShjb25zb2xlLmxvZykKCmV4cG9ydCB7IHdlYjMsIGNvbnRyYWN0IH07"},{"version":3,"sources":["/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/contract/contract.js"],"names":["Web3","ABI","web3","givenProvider","contract","eth","Contract"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,uBAAjB;AACA,OAAOC,GAAP,MAAgB,yBAAhB,C,CAEA;AAEA;AAEA;AACA;AACI;AACA;AACI;AACA;AAGR;AACA;AAEA;;AACA,IAAMC,IAAI,GAAG,IAAIF,IAAJ,CAASA,IAAI,CAACG,aAAd,CAAb;AACA,IAAMC,QAAQ,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBL,GAAtB,EAA2B,4CAA3B,CAAjB,C,CACA;;AAEA,SAAQC,IAAR,EAAcE,QAAd","sourcesContent":["import Web3 from 'web3/dist/web3.min.js'\nimport ABI from './contractABITestnet.js'\n\n// Initialize web3 provider\n\n// develop version\n\n// product version\n// if ( typeof ethereum !== 'undefined'){\n    //     web3 = new Web3(Web3.givenProvider)\n    // }else {\n        //     alert('require Metamask')\n        // }\n\n\n// const web3 = new Web3(new Web3.providers.WebsocketProvider(\"ws://127.0.0.1:8545\"))\n// const contract = new web3.eth.Contract(ABI, '0xD2d46ac0319bfb98369A8FD96604D016f080f401')\n\n// ethereum.request({ method: 'eth_accounts' }).then(console.log)\nconst web3 = new Web3(Web3.givenProvider)\nconst contract = new web3.eth.Contract(ABI, '0xDCA52541f8a672EBCfaad3426d212f0E06Fb6A44')\n// web3.eth.net.getNetworkType(console.log)\n\nexport {web3, contract}"]}]}