{"remainingRequest":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/components/nft/RegisterNFT.vue?vue&type=style&index=0&id=47254b46&scoped=true&lang=css","dependencies":[{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/components/nft/RegisterNFT.vue","mtime":1642503172334},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1628298225000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5pbWFnZVByZXZpZXdXcmFwcGVyIHsKICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OwogICAgd2lkdGg6IDI1MHB4OwogICAgaGVpZ2h0OiAyNTBweDsKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgbWFyZ2luOiAwIGF1dG8gMzBweDsKICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjsKICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7Cn0KCi5wcmV2aWV3LWltZyB7CiAgICB3aWR0aDogNTAlOwp9Cg=="},{"version":3,"sources":["/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/components/nft/RegisterNFT.vue"],"names":[],"mappings":";AA6GA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACd","file":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/components/nft/RegisterNFT.vue","sourceRoot":"","sourcesContent":["<template>\n    <div>\n        <form @submit.prevent=\"registerNFT\">\n            <div>\n                <label for=\"name\">NFT名稱：</label>\n                <br>\n                <input id=\"name\" type=\"text\" v-model=\"name\" >\n            </div>\n            <div>\n                <label for=\"description\">描述：</label>\n                <br>\n                <input id=\"description\" type=\"text\" v-model=\"description\">\n            </div>\n            <br>\n            <div>\n                <span>選擇掛鉤的專案：</span>\n                <select v-model=\"selectedPlan\">\n                    <option v-for=\"(plan, id) in plans\" :key=id>\n                        {{plan.name}}\n                    </option>\n                </select>\n            </div>\n            <br>\n            <div>\n                <label for=\"formFile\" class=\"form-label\">Upload Image：</label>\n                <input class=\"form-control\" type=\"file\" @input=\"pickFile\" accept=\"image/*\">\n                <img class=\"preview-img\" :src=\"image\" alt=\"\">\n            </div>\n            <br>\n            <input type=\"submit\" value=\"提交\">\n        </form>\n    </div>\n</template>\n\n<script>\nimport {ref, computed} from 'vue'\nimport {useStore} from 'vuex'\nimport {useRoute, useRouter} from 'vue-router'\nimport {web3, contract} from '@/contract/contract.js'\nimport {NFTStorage, File} from 'nft.storage'\n// import {pack} from 'ipfs-car/pack'\nimport * as fs from 'fs'\n\nexport default {\n    props: {\n        plans: {\n            type: Object\n        }\n    },\n    setup(props){\n        const route = useRoute()\n\n        const name = ref(\"\");\n        const description = ref(\"\");\n        const image = ref(\"\");\n        const selectedPlan = ref(\"\")\n\n        const plans = ref(props.plans)\n\n        let image_temp = null\n        const pickFile = (event) => {\n            const reader = new FileReader()\n            reader.onload = (e) => {\n                image.value = e.target.result;\n            }\n\n            image_temp = event.target.files[0]\n            reader.readAsDataURL(event.target.files[0])\n        }\n\n        const registerNFT = async () => {\n            const apiKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDY0Q2NGNEVlMEM4N2I2QjZlNEFDRTRFQWRiNzg0MGQ0RjUyMjMxMTciLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYzOTU0NDQyNTgwNCwibmFtZSI6ImNyeXB0X2RvbmF0aW9uIn0.iGh9m27-DncOEfMl0vBEy8fPWIKY32eeQLkmatfawbI'\n            const client = new NFTStorage({token : apiKey})\n            const metadata = await client.store({\n                name: name.value,\n                description: description.value,\n                image: image_temp\n            })\n            const address = await web3.eth.getAccounts()\n\n            contract.methods.register_nft(route.params.departmentId, name.value, metadata.url).send({\n                from: address[0],\n                gas : 9187500,\n            }).then(() => {\n                contract.methods.addNFTToPlan(route.params.departmentId, selectedPlan.value, name.value).send({\n                    from: address[0],\n                    gas : 9187500,      \n                }).then(console.log)\n                .catch(console.log)\n            }).catch(err => {\n                console.log(\"error: \", err)\n            })\n        }\n\n\n        return {\n            name,\n            description,\n            image,\n            plans,\n            selectedPlan,\n            pickFile,\n            registerNFT\n        }\n    }\n}\n</script>\n\n<style scoped>\n.imagePreviewWrapper {\n  background-repeat: no-repeat;\n    width: 250px;\n    height: 250px;\n    display: block;\n    cursor: pointer;\n    margin: 0 auto 30px;\n    background-size: contain;\n    background-position: center center;\n}\n\n.preview-img {\n    width: 50%;\n}\n</style>"]}]}