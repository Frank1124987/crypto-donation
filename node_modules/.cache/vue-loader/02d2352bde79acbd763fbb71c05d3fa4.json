{"remainingRequest":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\src\\components\\nft\\RegisterNFT.vue?vue&type=style&index=0&id=47254b46&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\src\\components\\nft\\RegisterNFT.vue","mtime":1640104029002},{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1632349277000},{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouaW1hZ2VQcmV2aWV3V3JhcHBlciB7DQogIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7DQogICAgd2lkdGg6IDI1MHB4Ow0KICAgIGhlaWdodDogMjUwcHg7DQogICAgZGlzcGxheTogYmxvY2s7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KICAgIG1hcmdpbjogMCBhdXRvIDMwcHg7DQogICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluOw0KICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7DQp9DQoNCiNuZnQtcHJldmlldy1pbWcgew0KICAgIHdpZHRoOiA4MCU7DQp9DQo="},{"version":3,"sources":["C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\src\\components\\nft\\RegisterNFT.vue"],"names":[],"mappings":";AA6GA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACd","file":"C:/Users/G501VW/Desktop/0817/crypto-donation/src/components/nft/RegisterNFT.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div>\r\n        <form @submit.prevent=\"registerNFT\">\r\n            <div>\r\n                <label for=\"name\">NFT名稱：</label>\r\n                <br>\r\n                <input id=\"name\" type=\"text\" v-model=\"name\" >\r\n            </div>\r\n            <div>\r\n                <label for=\"description\">描述：</label>\r\n                <br>\r\n                <input id=\"description\" type=\"text\" v-model=\"description\">\r\n            </div>\r\n            <br>\r\n            <div>\r\n                <span>選擇掛鉤的專案：</span>\r\n                <select v-model=\"selectedPlan\">\r\n                    <option v-for=\"(plan, id) in plans\" :key=id>\r\n                        {{plan.name}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <br>\r\n            <div>\r\n                <label for=\"formFile\" class=\"form-label\">Upload Image：</label>\r\n                <input class=\"form-control\" type=\"file\" @input=\"pickFile\" accept=\"image/*\">\r\n                <img id=\"nft-preview-img\" :src=\"image\" alt=\"\">\r\n            </div>\r\n            <br>\r\n            <input type=\"submit\" value=\"提交\">\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {ref, computed} from 'vue'\r\nimport {useStore} from 'vuex'\r\nimport {useRoute, useRouter} from 'vue-router'\r\nimport {web3, contract} from '@/contract/contract.js'\r\nimport {NFTStorage, File} from 'nft.storage'\r\n// import {pack} from 'ipfs-car/pack'\r\nimport * as fs from 'fs'\r\n\r\nexport default {\r\n    props: {\r\n        plans: {\r\n            type: Object\r\n        }\r\n    },\r\n    setup(props){\r\n        const route = useRoute()\r\n\r\n        const name = ref(\"\");\r\n        const description = ref(\"\");\r\n        const image = ref(\"\");\r\n        const selectedPlan = ref(\"\")\r\n\r\n        const plans = ref(props.plans)\r\n\r\n        let image_temp = null\r\n        const pickFile = (event) => {\r\n            const reader = new FileReader()\r\n            reader.onload = (e) => {\r\n                image.value = e.target.result;\r\n            }\r\n\r\n            image_temp = event.target.files[0]\r\n            reader.readAsDataURL(event.target.files[0])\r\n        }\r\n\r\n        const registerNFT = async () => {\r\n            const apiKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDY0Q2NGNEVlMEM4N2I2QjZlNEFDRTRFQWRiNzg0MGQ0RjUyMjMxMTciLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYzOTU0NDQyNTgwNCwibmFtZSI6ImNyeXB0X2RvbmF0aW9uIn0.iGh9m27-DncOEfMl0vBEy8fPWIKY32eeQLkmatfawbI'\r\n            const client = new NFTStorage({token : apiKey})\r\n            const metadata = await client.store({\r\n                name: name.value,\r\n                description: description.value,\r\n                image: image_temp\r\n            })\r\n            const address = await web3.eth.getAccounts()\r\n\r\n            contract.methods.register_nft(route.params.departmentId, name.value, metadata.url).send({\r\n                from: address[0],\r\n                gas : 9187500,\r\n            }).then(() => {\r\n                contract.methods.addNFTToPlan(route.params.departmentId, selectedPlan.value, name.value).send({\r\n                    from: address[0],\r\n                    gas : 9187500,      \r\n                }).then(console.log)\r\n                .catch(console.log)\r\n            }).catch(err => {\r\n                console.log(\"error: \", err)\r\n            })\r\n        }\r\n\r\n\r\n        return {\r\n            name,\r\n            description,\r\n            image,\r\n            plans,\r\n            selectedPlan,\r\n            pickFile,\r\n            registerNFT\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.imagePreviewWrapper {\r\n  background-repeat: no-repeat;\r\n    width: 250px;\r\n    height: 250px;\r\n    display: block;\r\n    cursor: pointer;\r\n    margin: 0 auto 30px;\r\n    background-size: contain;\r\n    background-position: center center;\r\n}\r\n\r\n#nft-preview-img {\r\n    width: 80%;\r\n}\r\n</style>"]}]}