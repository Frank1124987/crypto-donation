{"remainingRequest":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/views/projects/ProjectDonate.vue?vue&type=template&id=3795c30d","dependencies":[{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/views/projects/ProjectDonate.vue","mtime":1631271478124},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1628298225000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzPSJkb25hdGUiPgogICAgICAgIGRvbmF0ZSBwYWdlIHt7ICRyb3V0ZS5wYXJhbXMuaWQgfX0KICAgIDwvZGl2PiAgCg=="},{"version":3,"sources":["/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/views/projects/ProjectDonate.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACrC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/views/projects/ProjectDonate.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"donate\">\n        donate page {{ $route.params.id }}\n    </div>  \n</template>\n\n<script>\nimport {onBeforeMount} from 'vue'\nimport {useRoute, useRouter} from 'vue-router'\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\nexport default {\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n\n    const auth = getAuth()\n    onBeforeMount(() => {\n      onAuthStateChanged(auth, (user) => {\n        if (!user) {\n          router.replace('/login')\n        }else {\n          console.log(auth.currentUser.providerData)\n        }\n      })\n    })\n\n    return {\n    }\n  },\n}\n</script>"]}]}