{"remainingRequest":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/components/nft/RegisterNFT.vue?vue&type=template&id=47254b46&scoped=true","dependencies":[{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/components/nft/RegisterNFT.vue","mtime":1642503172334},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1628298225000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2PgogICAgICAgIDxmb3JtIEBzdWJtaXQucHJldmVudD0icmVnaXN0ZXJORlQiPgogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ibmFtZSI+TkZU5ZCN56ix77yaPC9sYWJlbD4KICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0ibmFtZSIgdHlwZT0idGV4dCIgdi1tb2RlbD0ibmFtZSIgPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImRlc2NyaXB0aW9uIj7mj4/ov7DvvJo8L2xhYmVsPgogICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgPGlucHV0IGlkPSJkZXNjcmlwdGlvbiIgdHlwZT0idGV4dCIgdi1tb2RlbD0iZGVzY3JpcHRpb24iPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGJyPgogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4+6YG45pOH5o6b6Ymk55qE5bCI5qGI77yaPC9zcGFuPgogICAgICAgICAgICAgICAgPHNlbGVjdCB2LW1vZGVsPSJzZWxlY3RlZFBsYW4iPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdi1mb3I9IihwbGFuLCBpZCkgaW4gcGxhbnMiIDprZXk9aWQ+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7cGxhbi5uYW1lfX0KICAgICAgICAgICAgICAgICAgICA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDwvc2VsZWN0PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGJyPgogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZm9ybUZpbGUiIGNsYXNzPSJmb3JtLWxhYmVsIj5VcGxvYWQgSW1hZ2XvvJo8L2xhYmVsPgogICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPSJmb3JtLWNvbnRyb2wiIHR5cGU9ImZpbGUiIEBpbnB1dD0icGlja0ZpbGUiIGFjY2VwdD0iaW1hZ2UvKiI+CiAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwcmV2aWV3LWltZyIgOnNyYz0iaW1hZ2UiIGFsdD0iIj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IuaPkOS6pCI+CiAgICAgICAgPC9mb3JtPgogICAgPC9kaXY+Cg=="},{"version":3,"sources":["/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/components/nft/RegisterNFT.vue"],"names":[],"mappings":"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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/components/nft/RegisterNFT.vue","sourceRoot":"","sourcesContent":["<template>\n    <div>\n        <form @submit.prevent=\"registerNFT\">\n            <div>\n                <label for=\"name\">NFT名稱：</label>\n                <br>\n                <input id=\"name\" type=\"text\" v-model=\"name\" >\n            </div>\n            <div>\n                <label for=\"description\">描述：</label>\n                <br>\n                <input id=\"description\" type=\"text\" v-model=\"description\">\n            </div>\n            <br>\n            <div>\n                <span>選擇掛鉤的專案：</span>\n                <select v-model=\"selectedPlan\">\n                    <option v-for=\"(plan, id) in plans\" :key=id>\n                        {{plan.name}}\n                    </option>\n                </select>\n            </div>\n            <br>\n            <div>\n                <label for=\"formFile\" class=\"form-label\">Upload Image：</label>\n                <input class=\"form-control\" type=\"file\" @input=\"pickFile\" accept=\"image/*\">\n                <img class=\"preview-img\" :src=\"image\" alt=\"\">\n            </div>\n            <br>\n            <input type=\"submit\" value=\"提交\">\n        </form>\n    </div>\n</template>\n\n<script>\nimport {ref, computed} from 'vue'\nimport {useStore} from 'vuex'\nimport {useRoute, useRouter} from 'vue-router'\nimport {web3, contract} from '@/contract/contract.js'\nimport {NFTStorage, File} from 'nft.storage'\n// import {pack} from 'ipfs-car/pack'\nimport * as fs from 'fs'\n\nexport default {\n    props: {\n        plans: {\n            type: Object\n        }\n    },\n    setup(props){\n        const route = useRoute()\n\n        const name = ref(\"\");\n        const description = ref(\"\");\n        const image = ref(\"\");\n        const selectedPlan = ref(\"\")\n\n        const plans = ref(props.plans)\n\n        let image_temp = null\n        const pickFile = (event) => {\n            const reader = new FileReader()\n            reader.onload = (e) => {\n                image.value = e.target.result;\n            }\n\n            image_temp = event.target.files[0]\n            reader.readAsDataURL(event.target.files[0])\n        }\n\n        const registerNFT = async () => {\n            const apiKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDY0Q2NGNEVlMEM4N2I2QjZlNEFDRTRFQWRiNzg0MGQ0RjUyMjMxMTciLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYzOTU0NDQyNTgwNCwibmFtZSI6ImNyeXB0X2RvbmF0aW9uIn0.iGh9m27-DncOEfMl0vBEy8fPWIKY32eeQLkmatfawbI'\n            const client = new NFTStorage({token : apiKey})\n            const metadata = await client.store({\n                name: name.value,\n                description: description.value,\n                image: image_temp\n            })\n            const address = await web3.eth.getAccounts()\n\n            contract.methods.register_nft(route.params.departmentId, name.value, metadata.url).send({\n                from: address[0],\n                gas : 9187500,\n            }).then(() => {\n                contract.methods.addNFTToPlan(route.params.departmentId, selectedPlan.value, name.value).send({\n                    from: address[0],\n                    gas : 9187500,      \n                }).then(console.log)\n                .catch(console.log)\n            }).catch(err => {\n                console.log(\"error: \", err)\n            })\n        }\n\n\n        return {\n            name,\n            description,\n            image,\n            plans,\n            selectedPlan,\n            pickFile,\n            registerNFT\n        }\n    }\n}\n</script>\n\n<style scoped>\n.imagePreviewWrapper {\n  background-repeat: no-repeat;\n    width: 250px;\n    height: 250px;\n    display: block;\n    cursor: pointer;\n    margin: 0 auto 30px;\n    background-size: contain;\n    background-position: center center;\n}\n\n.preview-img {\n    width: 50%;\n}\n</style>"]}]}