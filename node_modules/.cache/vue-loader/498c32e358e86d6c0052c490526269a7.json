{"remainingRequest":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/views/Register.vue?vue&type=style&index=0&id=63ae9146&scoped=true&lang=css","dependencies":[{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/views/Register.vue","mtime":1639330951625},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1628298225000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmZvcm0gPiBpbnB1dCB7CiAgICBtYXJnaW46IDElOwp9CgoucmVnaXN0ZXIgewogICAgdGV4dC1hbGlnbjogY2VudGVyOwp9Cg=="},{"version":3,"sources":["/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/views/Register.vue"],"names":[],"mappings":";AAgFA,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB","file":"/Users/weifan4569908/Documents/Crypto_Donation/crypto-donate/src/views/Register.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"register\">\n        <h1>\n            Register\n        </h1>\n        <form @submit.prevent=\"register\">\n            <div>\n                <label for=\"email\">Email:</label>\n                <br>\n                <input type=\"text\" id=\"email\" v-model=\"email\" name=\"email\">\n            </div>\n            <br>\n            <div>\n                <label for=\"password\">Password:</label>\n                <br>\n                <input type=\"password\" id=\"password\" v-model=\"password\" name=\"password\">\n            </div>\n            <div>\n                <label for=\"username\">Username:</label>\n                <br>\n                <input type=\"text\" id=\"username\" v-model=\"username\" name=\"username\">\n            </div>\n            <br>\n            <input type=\"submit\" value=\"Submit\">\n        </form>\n        <router-link to=\"Login\">Login</router-link>\n    </div>\n</template>\n\n\n<script>\nimport {ref, watch} from 'vue'\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport {useRouter} from \"vue-router\"\nimport {useStore} from \"vuex\"\n\nimport accountService from \"@/firestore/firestoreFunc.js\"\nimport {web3, contract} from \"@/contract/contract.js\"\nexport default{\n    name: 'Register',\n    setup(){\n        const email = ref(\"\")\n        const password = ref(\"\")\n        const username = ref(\"\")\n\n        const route = useRouter()\n        const store = useStore()\n\n\n        const register = async () => {\n            const auth = getAuth();\n            const accounts = await web3.eth.getAccounts()\n            createUserWithEmailAndPassword(auth, email.value, password.value)\n                .then((userCredential) => {\n                    // Signed in \n                    accountService.createEthereumId(store.state.user.uId, {ethereumId : email.value})\n                    contract.methods.registerDonor(email.value, username.value).send({\n                        from: accounts[0],\n                        gas : 9187500\n                    }).then(console.log)\n                    route.push('/')\n                })\n                .catch((error) => {\n                    const errorCode = error.code;\n                    const errorMessage = error.message;\n                    // ..\n                });\n        }\n\n        return {\n            email,\n            password,\n            username,\n            register\n        }\n    }\n}\n</script>\n\n<style scoped>\nform > input {\n    margin: 1%;\n}\n\n.register {\n    text-align: center;\n}\n</style>"]}]}