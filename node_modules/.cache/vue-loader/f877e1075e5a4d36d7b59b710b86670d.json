{"remainingRequest":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\src\\views\\Register.vue?vue&type=style&index=0&id=63ae9146&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\src\\views\\Register.vue","mtime":1640104029155},{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpmb3JtID4gaW5wdXQgew0KICAgIG1hcmdpbjogMSU7DQp9DQoNCi5yZWdpc3RlciB7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0K"},{"version":3,"sources":["C:\\Users\\G501VW\\Desktop\\0817\\crypto-donation\\src\\views\\Register.vue"],"names":[],"mappings":";AAgFA,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB","file":"C:/Users/G501VW/Desktop/0817/crypto-donation/src/views/Register.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"register\">\r\n        <h1>\r\n            Register\r\n        </h1>\r\n        <form @submit.prevent=\"register\">\r\n            <div>\r\n                <label for=\"email\">Email:</label>\r\n                <br>\r\n                <input type=\"text\" id=\"email\" v-model=\"email\" name=\"email\">\r\n            </div>\r\n            <br>\r\n            <div>\r\n                <label for=\"password\">Password:</label>\r\n                <br>\r\n                <input type=\"password\" id=\"password\" v-model=\"password\" name=\"password\">\r\n            </div>\r\n            <div>\r\n                <label for=\"username\">Username:</label>\r\n                <br>\r\n                <input type=\"text\" id=\"username\" v-model=\"username\" name=\"username\">\r\n            </div>\r\n            <br>\r\n            <input type=\"submit\" value=\"Submit\">\r\n        </form>\r\n        <router-link to=\"Login\">Login</router-link>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport {ref, watch} from 'vue'\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport {useRouter} from \"vue-router\"\r\nimport {useStore} from \"vuex\"\r\n\r\nimport accountService from \"@/firestore/firestoreFunc.js\"\r\nimport {web3, contract} from \"@/contract/contract.js\"\r\nexport default{\r\n    name: 'Register',\r\n    setup(){\r\n        const email = ref(\"\")\r\n        const password = ref(\"\")\r\n        const username = ref(\"\")\r\n\r\n        const route = useRouter()\r\n        const store = useStore()\r\n\r\n\r\n        const register = async () => {\r\n            const auth = getAuth();\r\n            const accounts = await web3.eth.getAccounts()\r\n            createUserWithEmailAndPassword(auth, email.value, password.value)\r\n                .then((userCredential) => {\r\n                    // Signed in \r\n                    accountService.createEthereumId(store.state.user.uId, {ethereumId : email.value})\r\n                    contract.methods.registerDonor(email.value, username.value).send({\r\n                        from: accounts[0],\r\n                        gas : 9187500\r\n                    }).then(console.log)\r\n                    route.push('/')\r\n                })\r\n                .catch((error) => {\r\n                    const errorCode = error.code;\r\n                    const errorMessage = error.message;\r\n                    console.log(errorCode, errorMessage)\r\n                });\r\n        }\r\n\r\n        return {\r\n            email,\r\n            password,\r\n            username,\r\n            register\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nform > input {\r\n    margin: 1%;\r\n}\r\n\r\n.register {\r\n    text-align: center;\r\n}\r\n</style>"]}]}